version: '3.4'

services:
  middleware-env:
    image: "${DOCKER_REGISTRY_URL}/${SERVICE_IMAGE_NAME}:env"
    env_file:
      - ".${ENV_TYPE}.env"
    environment:
      ENV_TYPE: ${ENV_TYPE}
    build:
      context: .
      dockerfile: "${DOCKERFILE_PATH}/env.Dockerfile"
      target: env

  middleware-dev:
    image: "${DOCKER_REGISTRY_URL}/${SERVICE_IMAGE_NAME}:dev"
    env_file:
      - ".${ENV_TYPE}.env"
    environment:
      ENV_TYPE: ${ENV_TYPE}
    build:
      context: .
      dockerfile: "${DOCKERFILE_PATH}/build.Dockerfile"
      target: dev
    depends_on:
      - middleware-env

  middleware:
    image: "${DOCKER_REGISTRY_URL}/${SERVICE_IMAGE_NAME}:${ENV_TYPE}"
    env_file:
      - ".${ENV_TYPE}.env"
    environment:
      ENV_TYPE: ${ENV_TYPE}
      JPDA_ADDRESS: ${DEBUG_PORT}
      JPDA_OPTS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0.0.0.0:${DEBUG_PORT}"
    build:
      context: .
      dockerfile: "${DOCKERFILE_PATH}/testing.Dockerfile"
      target: qa
    ports:
      - "${WA_PORT}:${WA_PORT}"
      - "${DEBUG_PORT}:${DEBUG_PORT}"
    depends_on:
      - middleware-env
      - middleware-dev
    volumes:
      - "./tomcat-qa-logs:${TOMCAT_LOG_PATH}"
    entrypoint: "/usr/local/tomcat/bin/catalina.sh jpda run"
